# coding: utf-8

"""
    PostPuma - OpenAPI 3.0

    PostPuma API specifications

    The version of the OpenAPI document: 1.0.0
    Contact: support@postpuma.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from PostPuma.models.post import Post

class TestPost(unittest.TestCase):
    """Post unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Post:
        """Test Post
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Post`
        """
        model = Post()
        if include_optional:
            return Post(
                id = 56,
                uuid = '',
                status = '',
                accounts = [
                    PostPuma.models.account.Account(
                        id = 56, 
                        uuid = '', 
                        name = '', 
                        username = '', 
                        provider = '', 
                        data = PostPuma.models.account_data.Account_data(
                            union_id = '', 
                            is_private = True, 
                            duet_disabled = True, 
                            privacy_levels = [
                                ''
                                ], 
                            stitch_disabled = True, 
                            comment_disabled = True, 
                            max_video_post_duration_sec = 56, ), 
                        authorized = True, 
                        created_at = '', )
                    ],
                versions = [
                    PostPuma.models.version.Version(
                        account_id = 56, 
                        is_original = True, 
                        content = PostPuma.models.version_content.Version_content(
                            body = '', 
                            media = [
                                ''
                                ], 
                            url = '', ), 
                        options = PostPuma.models.version_options.Version_options(
                            tiktok = PostPuma.models.version_options_tiktok.Version_options_tiktok(
                                privacy_level = PostPuma.models.version_options_tiktok_privacy_level.Version_options_tiktok_privacy_level(
                                    account_0 = True, ), 
                                allow_comments = PostPuma.models.version_options_tiktok_privacy_level.Version_options_tiktok_privacy_level(
                                    account_0 = True, ), 
                                allow_duet = , 
                                allow_stitch = , 
                                content_disclosure = , 
                                brand_organic_toggle = , 
                                brand_content_toggle = , ), 
                            youtube = PostPuma.models.version_options_youtube.Version_options_youtube(
                                title = '', 
                                status = '', ), 
                            linkedin = PostPuma.models.version_options_linkedin.Version_options_linkedin(
                                visibility = '', ), 
                            mastodon = PostPuma.models.version_options_mastodon.Version_options_mastodon(
                                sensitive = True, ), 
                            instagram = PostPuma.models.version_options_instagram.Version_options_instagram(
                                type = '', ), 
                            pinterest = PostPuma.models.version_options_pinterest.Version_options_pinterest(
                                title = '', 
                                link = '', 
                                boards = PostPuma.models.version_options_pinterest_boards.Version_options_pinterest_boards(
                                    accounts_0 = '', ), ), 
                            facebook_page = PostPuma.models.version_options_instagram.Version_options_instagram(
                                type = '', ), ), )
                    ],
                tags = [
                    PostPuma.models.tag.Tag(
                        id = 56, 
                        uuid = '', 
                        name = '', 
                        hex_color = '', )
                    ],
                user = PostPuma.models.post_user.Post_user(
                    name = '', ),
                scheduled_at = '',
                published_at = '',
                created_at = '',
                trashed = True
            )
        else:
            return Post(
        )
        """

    def testPost(self):
        """Test Post"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
