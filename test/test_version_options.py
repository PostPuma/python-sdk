# coding: utf-8

"""
    PostPuma - OpenAPI 3.0

    PostPuma API specifications

    The version of the OpenAPI document: 1.0.0
    Contact: support@postpuma.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from PostPuma.models.version_options import VersionOptions

class TestVersionOptions(unittest.TestCase):
    """VersionOptions unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VersionOptions:
        """Test VersionOptions
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VersionOptions`
        """
        model = VersionOptions()
        if include_optional:
            return VersionOptions(
                tiktok = PostPuma.models.version_options_tiktok.Version_options_tiktok(
                    privacy_level = PostPuma.models.version_options_tiktok_privacy_level.Version_options_tiktok_privacy_level(
                        account_0 = True, ), 
                    allow_comments = PostPuma.models.version_options_tiktok_privacy_level.Version_options_tiktok_privacy_level(
                        account_0 = True, ), 
                    allow_duet = , 
                    allow_stitch = , 
                    content_disclosure = , 
                    brand_organic_toggle = , 
                    brand_content_toggle = , ),
                youtube = PostPuma.models.version_options_youtube.Version_options_youtube(
                    title = '', 
                    status = '', ),
                linkedin = PostPuma.models.version_options_linkedin.Version_options_linkedin(
                    visibility = '', ),
                mastodon = PostPuma.models.version_options_mastodon.Version_options_mastodon(
                    sensitive = True, ),
                instagram = PostPuma.models.version_options_instagram.Version_options_instagram(
                    type = '', ),
                pinterest = PostPuma.models.version_options_pinterest.Version_options_pinterest(
                    title = '', 
                    link = '', 
                    boards = PostPuma.models.version_options_pinterest_boards.Version_options_pinterest_boards(
                        accounts_0 = '', ), ),
                facebook_page = PostPuma.models.version_options_instagram.Version_options_instagram(
                    type = '', )
            )
        else:
            return VersionOptions(
        )
        """

    def testVersionOptions(self):
        """Test VersionOptions"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
